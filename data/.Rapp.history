logclay <- log(clay)
qqnorm(logclay)
qqnorm(logclay)
logclay <- log(clay)
qqnorm(logclay)
head(logclay)
hist(clay)
hist(silt)
hist(SOM)
hist(sand)
hist(total_plant_biomass)
head(clay)
logclay <- log(clay)
qqnorm(logclay)
head(logclay)
logclay <- cbind(log(clay))
qqnorm(logclay)
shapiro.test(logclay)
logclay <- log(data$clay)
qqnorm(logclay)
shapiro.test(total_plant_biomass)
logplant <- log(total_plant_biomass)
qqnorm(logplant)
hist(logplant)
shapiro.test(logplant)
t.test(logplant ~ treatment)
qqnorm(sand)
hist(sand)
boxplot(sand ~ treatment)
shapiro.test(sand)
qqnorm(SOM)
hist(SOM)
shapiro.test(SOM)
logSOM <- log(SOM)
qqnorm(logSOM)
hist(logSOM)
hist(SOM)
shapiro.test(logSOM)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
logclay <- log(data$clay)
qqnorm(logclay)
shapiro.test(logclay)
shapiro.test(logplant)
logplant <- log(total_plant_biomass)
shapiro.test(logplant)
shapiro.test(logclay)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)#
#
head(data)
boxplot(sand ~ treatment)
qqnorm(sand)
hist(sand)
shapiro.test(sand)
qqnorm(clay)
logclay <- arcsin(clay)
logclay <- arcsine(clay)
logclay <- asin(clay)
head(logclay)
qqnorm(logclay)
shapiro.test(logclay)
shapiro.test(SOM)
logSOM <- log(SOM)
shapiro.test(logSOM)
logclay <- asin(sqrt(clay))
head(logclay)
qqnorm(logclay)
shapiro.test(logclay)
qqnorm(logclay)
logclay <- log10(clay))
logclay <- log10(clay)
qqnorm(logclay)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)#
#
head(data)
logclay <- log10(clay)
qqnorm(logclay)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
logclay <- log10(clay)
qqnorm(logclay)
shapiro.test(logclay)
logSOM <- log(SOM)
shapiro.test(logSOM)
hist(logSOM)
qqnorm(logSOM)
hist(logSOM)
logSOM <- sqrt(SOM)
hist(logSOM)
shapiro.test(logSOM)
shapiro.test(logSOM)
hist(logSOM)
qqnorm(logSOM)
logSOM <- asine(sqrt(SOM))
logSOM <- asin(sqrt(SOM))
shapiro.test(logSOM)
head(logSOM)
logSOM <- log(SOM)
hist(logSOM)
logclay <- log10(clay)
shapiro.test(logclay)
shapiro.test(clay)
hist(clay)
logclay <- boxcox(clay)
library(MASS)
logclay <- boxcox(clay)
logclay <- boxcox(clay)$y
logclay <- boxcox(clay + 1)$y
transclay <- boxcox(clay + 1)$y
transclay <- boxcox(clay + 1)
transclay <- boxcox(clay + 1)$x
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)#
#
head(data)
boxplot(moisture ~ treatment)
boxplot(sand ~ treatment)
boxplot(moisture ~ treatment)
qqnorm (moisture)
hist(moisture)
shapiro.test(moisture)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)#
#
head(data)
transmoisture <- asin(sqrt(moisture))
qqnorm(transmoisture)
hist(transmoisture)
shapiro.test(transmoisture)
qqnorm(logplant)
shapiro.test(silt)
boxplot(SOM ~ treatment)
qqnorm(SOM)
hist(SOM)
shapiro.test(SOM)
transmoisture <- sqrt(moisture)
shapiro.test(transclay)
shapiro.test(transmoisture)
hist(transmoisture)
qqnorm(transmoisture)
transmoisture <- scale(moisture)
qqnorm(transmoisture)
hist(transmoisture)
shapiro.test(transmoisture)
install.packages("car", dependencies + TRUE)
install.packages("car", dependencies = TRUE)
transmoisture <- as.numeric(vdWtrans((moisture))
hist(transmoisture)
transmoisture <- as.numeric(vdWtrans((moisture))
hist(transmoisture)
qqnorm(transmoisture)
shapiro.test(transmoisture)
transmoisture <- scale(moisture)
neway_test(moisture ~ treatment)
library(coin)
install.packages("coin", dependencies = TRUE)
library(coin)
neway_test(moisture ~ treatment)
oneway_test(moisture ~ treatment)
oneway_test(moisture ~ treatment, data = data)
summary(data)
nummoisture <- as.numeric(moisture)
oneway_test(moisture ~ treatment)
oneway_test(nummoisture ~ treatment)
oneway_test(moisture ~ treatment)
nummoisture <- as.factor(moisture)
oneway_test(nummoisture ~ treatment)
t.test(oneway_test(moisture ~ treatment))
oneway_test(moisture ~ treatment, B = 10 000)
result <- oneway_test(moisture ~ treatment) #, B = 10 000)
treatment <- as.factor(treatment)
oneway_test(moisture ~ treatment) #, B = 10 000)
t.test(logplant ~ treatment)
logplant <- log(total_plant_biomass)
t.test(logplant ~ treatment)
t.test(sand ~ treatment)
oneway_test(moisture ~ treatment) #, B = 10 000)
oneway_test(moisture ~ treatment, B = 10 000)
oneway_test(moisture ~ treatment, nresample = 10 000)
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.table('/Users/jonassanders/Desktop/BIOL 315/Final Portfolio/Threatened_Species_Dataset_3.txt', header = T)#
attach(data)#
#
# create a boxplot to determine the shape of the data#
boxplot(Sp_threat ~ Cl, ylab = 'Average Number of Threatened Species', xlab = 'Taxonomic Class')#
#
# look at assumptions#
qqnorm(Sp_threat)#
qqline(Sp_threat)#
shapiro.test(Sp_threat)#
#
# transform and look at assumptions again#
sqrtthreat <- sqrt(Sp_threat)#
plot(sqrtthreat ~ Sp_threat)#
qqnorm(sqrtthreat)#
qqline(sqrtthreat)#
shapiro.test(sqrtthreat)#
#
# assumptions not met so conduct a permutation test#
require(coin)#
library(coin)#
facCl <- factor(Cl)#
anovap <- oneway_test(sqrtthreat~facCl,distribution=approximate(nresample = 100000))#
anovap
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)
# read data from text file#
data <- read.table('/Users/jonassanders/Desktop/BIOL 315/Final Portfolio/Threatened_Species_Dataset_3.txt', header = T)#
attach(data)
data <- read.table('/Users/jonassanders/Documents/BIOL 315/Final Portfolio/Threatened_Species_Dataset_3.txt', header = T)
attach(data)
# create a boxplot to determine the shape of the data#
boxplot(Sp_threat ~ Cl, ylab = 'Average Number of Threatened Species', xlab = 'Taxonomic Class')#
#
# look at assumptions#
qqnorm(Sp_threat)#
qqline(Sp_threat)#
shapiro.test(Sp_threat)#
#
# transform and look at assumptions again#
sqrtthreat <- sqrt(Sp_threat)#
plot(sqrtthreat ~ Sp_threat)#
qqnorm(sqrtthreat)#
qqline(sqrtthreat)#
shapiro.test(sqrtthreat)#
#
# assumptions not met so conduct a permutation test#
require(coin)#
library(coin)#
facCl <- factor(Cl)#
anovap <- oneway_test(sqrtthreat~facCl,distribution=approximate(nresample = 100000))#
anovap
oneway_test(moisture ~ treatment, nresample = 10 000)
oneway_test(moisture ~ treatment) #, nresample = 10 000)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
oneway_test(moisture ~ treatment) #, nresample = 10 000)
treatment <- as.factor(treatment)
oneway_test(moisture ~ treatment) #, nresample = 10 000)
oneway_test(moisture ~ treatment (nresample = 10 000))
oneway_test(moisture ~ treatment (nresample = 10000))
oneway_test(moisture ~ treatment distribution = approximate (nresample = 10000))
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
bartlett.test(logplant)
logplant <- log(total_plant_biomass)
shapiro.test(logplant)
hist(logplant)
qqnorm(logplant)
bartlett.test(logplant)
bartlett.test(logplant ~ treatment)
bartlett.test(sand ~ treatment)
library(coin)
leveneTest(moisture, treatment)
library(car)
leveneTest(moisture, treatment)
leveneTest(SOM, treatment)
oneway_test(moisture ~ treatment, distribution = approximate (nresample = 10000))
wilcox.test(moisture ~ treatment, data = data)
summary(moisture)
summary(moisture ~ treatment)
mean(moisture ~ treatment)
mean(moisture)
mean(moisture ~ CC)
mean(moisture ~ treatment)
mean(moisture, treatment)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)#
#
head(data)#
summary(data)
wilcox.test(moisture ~ treatment, data = data)
wilcox.test(moisture ~ treatment, data = your_data)
wilcox.test(moisture ~ treatment, data = data)
# Calculate mean moisture for each treatment#
mean_moisture <- aggregate(data$moisture, by = list(data$treatment), FUN = mean)#
#
# Rename the columns#
colnames(mean_moisture) <- c("Treatment", "Mean_Moisture")#
#
# Print the result#
print(mean_moisture)
# Jonas Sanders#
# ECOL 425#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 429/Male.csv', header = T)#
attach(data)
t.test(msqrtoffspring ~ mtreatment) # Male RS
msqrtoffspring <- sqrt(moffspring)
fsqrtoffspring <- sqrt(foffspring)
t.test(msqrtoffspring ~ mtreatment) # Male RS
t.test(fsqrtoffspring ~ ftreatment) # Female RS
fsqrtoffspring <- sqrt(foffspring)
fsqrtoffspring <- sqrt(foffspring)
#summary statistics#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/summarydata.csv', header = T)#
attach(data)#
#
head(data)
mean(moisture_OF)
mean(moisture_CC)
mean(moisture_OF)
mean(moisture_OF, na.rm = TRUE)
mean(moisture_CC)
levenTest(logplant, treatment)
# Jonas Sanders#
# ECOL 419#
#
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
logplant <- log(total_plant_biomass)
library(car)
leveneTest(logplant, treatment)
leveneTest(moisture, treatment)
leveneTest(sand, treatment)
leveneTest(SOM, treatment)
# clear memory from previous run#
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
logplant <- log(total_plant_biomass)
leveneTest(moisture, treatment)
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
leveneTest(moisture, treatment)
rm(list=ls(all=T))#
detach(data)#
#
# read data from text file#
data <- read.csv('/Users/jonassanders/Documents/ECOL 419/Data.csv', header = T)#
attach(data)
leveneTest(moisture, treatment)
#this is the first R script that always needs to be run#
#all the data cleaning is here #
#if a mistake is found message April before making changes#
#Last edited on Dec 12, 2023 by A. R. Martinig #
#
#axy-assay analysis for Jonas#
#
#Delete previous information stored #
rm(list=ls(all=T))#
#
##set wd to the folder with all your csv's in it#
setwd("~/Documents/ECOL 530/axy-assay-comparison/data")
#this is the first R script that always needs to be run#
#all the data cleaning is here #
#if a mistake is found message April before making changes#
#Last edited on March 5, 2024 by A. R. Martinig #
#
#axy-assay analysis for Jonas#
#
options(scipen=999, dplyr.width = Inf, tibble.print_min = 50, repos='http://cran.rstudio.com/') #scipen forces outputs to not be in scientific notation #dplyr.width will show all columns for head() function and tibble.print_min sets how many rows are printed and repos sets the cran mirror#
#
#load libraries#
pacman::p_load(#
				ggplot2, #
				ggstatsplot,#
               dplyr, #
               lubridate, #
               tidyverse,   #
               broom,  #
               FSA,      #
               glmmTMB,  #
               lme4,   #
               tidyr,      #
               DescTools,#
               scales,#
               ggpubr,#
               grid,#
               lattice,#
               sjPlot,#
               sjlabelled,#
               sjmisc,#
               cowplot, #
               broom.mixed,#
               ggforce, #
               gridGraphics,#
               ggeffects,#
               magrittr,#
               krsp#
)#
select<-dplyr::select#
filter<-dplyr::filter#
###############################
#  importing  data and formatting it  ##
###############################
#########################################
#raw behavioural assays#
#impossible values removed#
#########################################
#
#creating the assay datast we will be using here#
#
assays<-read.csv("raw assays.csv", header=T) %>%#
	group_by(sq_id) %>%#
	mutate(trialdate=ymd(trialdate)) %>%#
	arrange(trialdate) %>%#
	mutate(trialnumber=row_number())%>%#
	ungroup() %>%#
#converting the raw scores#
	mutate(#
	ageclass=ifelse(age==0, "J", #
			ifelse(age==1, "Y", #
			ifelse(age>1, "A",  ageclass))),#
		squirrel_id=sq_id,#
		age=as.numeric(age),#
		walk=(walk/450), #
		jump=(jump/450), #
		hole=(hole/450), #
		hang=(hang/450), #
		chew=(chew/450), #
		groom=(groom/450), #
		still=(still/450),#
		front=(front/300), #
		back=(back/300), #
		attack=(attack/300), #
		attacklatency=(attacklatency/300), #
		approachlatency=(approachlatency/300)) %>%#
	filter(!squirrel_id== 23686, #IT DOES NOT HAVE A SEX LISTED ANYWHERE!#
	!is.na(squirrel_id), !observer %in% c("SWK"), is.na(hang) |hang<=1, is.na(chew) |chew<=1, is.na(still) |still<=1, is.na(front) | front<=1, is.na(back) |back<=1, is.na(attack) |attack<=0.96, is.na(attacklatency) |attacklatency<=1, is.na(approachlatency) |approachlatency<=1) %>% #
	#attack is set to 0.96 because numerous squirrels have 288-294 attacks, which are impossible to get in 300 seconds #
	#only excludes 2 squirrels from our n=88 dataset, the first (10265) had 294 attacks and a jump rate that was an outlier AND had decimals (which is impossible for a count behaviour!) and the second (10342) had 288 attacks#
	#this leaves squirrels with <=252 attacks (which also should be investigated)#
	select(-c(sq_id, observer.software,  collar, Exclude_unless_video_reanalyzed, Exclude_reason, Proceed_with_caution, Proceed_with_caution_reason, Last_Edited, Comments, oft_duration, mis_duration, colours, midden, taglft, tagrt, front, back, attack, attacklatency, approachlatency)) %>%#
	droplevels()#
summary(assays)#
head(assays)#
#
(assays) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #822 individuals#
nrow(assays) #1184#
#
table(assays$sex, assays$ageclass)#
table(assays$observer)#
assays%>%filter(is.na(trialnumber))#
assays %>% filter(squirrel_id== 13305)#
#########################################
######  extracting summary stats  #######
#########################################
#
#total number of inds and sex stats#
other_stats<-assays%>%#
	group_by(squirrel_id)%>%#
	filter(row_number()==1)#
#
(other_stats) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #822 individuals#
table(other_stats$sex) #sex number#
#
#ageclass stats#
age_class_stats<-assays%>%#
	group_by(squirrel_id, ageclass)%>%#
	filter(row_number()==1)#
#
table(age_class_stats$ageclass) #age class number (remember: some individuals will have multiple records across age classes!)#
table(age_class_stats$ageclass, age_class_stats$sex) #
#trial number by age class stats#
adults<-assays %>% filter(ageclass=="A") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
yearl<-assays%>%filter(ageclass=="Y") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
ju<-assays%>%filter(ageclass=="J") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
#note: trial number is not reliable for adults or yearlings BECAUSE the count starts with the first trial - which may be during earlier phases (like an adult with 5 trials, could have had 3 of them done as a juvenile) - to get around this, I calculated sums after subsetting#
#
nrow(adults)#
table(adults$sum, adults$sex)#
#
nrow(yearl)#
table(yearl$sum, yearl$sex)#
#
nrow(ju)#
table(ju$sum, ju$sex)#
#
#########################################
#bare minimum needed for axy data subsets#
#########################################
#
birth<-read.csv ("fitness.csv") %>%#
	select(c(squirrel_id, sex, byear, dyear, litter_id)) %>%#
	mutate(sex=ifelse(squirrel_id %in% c(21128, 21348), "F",#
		ifelse(squirrel_id %in% c(19890, 23326, 23210), "M", as.character(sex)))) %>%#
	group_by(squirrel_id) %>%#
	filter(row_number()==1)#
#
summary(birth)#
head(birth)#
#
#########################################
#raw axy data before cleaning#
#########################################
#
#for now I am just using Emily's data as I am waiting for Matt to provide me complete records#
axy<-read.csv("KRSP_sqr_axy_all_2014_2022_dailybyTOD.csv", header=T) %>%#
	mutate(#
		axy_id=paste(id, date, tod, sep = "-"), #
		axy_date=ymd(date),#
		axy_yr=year(date),#
		axy_month=month(date)) %>%#
	filter(!is.na(id)) %>% #remove the rows with NA for squirrel_id#
	select(squirrel_id= id, axy_date, axy_yr, axy_month, tod, feed=Feed, forage=Forage, nestmove=NestMove, nestnotmove=NestNotMove, notmoving=NotMoving, travel=Travel, total=Total, axy_id)#
#
head(axy)#
summary(axy)#
#
(axy) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #340 individuals#
nrow(axy) #38284#
#conserved theme across plots#
squirrel_theme <- theme_bw() +#
    theme(#legend.position = "top",#
      axis.line = element_line(colour = "black"),#
      panel.grid.major = element_blank(), #eliminates background grid#
      panel.grid.minor = element_blank(), #eliminates background grid#
      panel.border = element_blank(), #eliminates plot border#
      panel.background = element_blank(),#
      axis.title.x = element_text(size = 11), #
      axis.title.y = element_text(size = 11),#
      axis.text.x = element_text(size = 11, colour = "black"), #
      axis.text.y = element_text(size = 11, colour = "black"), #
      legend.title = element_text(size = 11, colour = "black"), #
      legend.text = element_text(size = 10, colour = "black"))
#pearson's correlations between raw behaviours for axys and assay data#
#last updated March 5, 2024 by A. R. Martinig#
#
# run#
Start-up code.R#
#correlations for unfilterd data to pull out correlations within assays and within focals#
#
p1<-ggstatsplot::ggcorrmat(#
  assays,#
  cor.vars = c(walk, jump, hole, hang, chew, groom, still),#
  cor.vars.names = c("Walk", "Jump", "Hole", "Hang", "Chew/Scratch", "Self-grooming", "Still"),#
  output = "plot",#
  matrix.type = "lower",#
  type = "pearson",#
  beta = 0.1,#
  k = 2,#
  sig.level = 0.05,#
  conf.level = 0.95,#
  nboot = 1000,#
  pch= "",#
  colors = c("black", "white", "black"),#
    ggcorrplot.args = list(#
    lab_size = 2) #makes the numbers in the boxes smaller#
)+ #
  scale_y_discrete(position = "right")+#
  theme_bw() +#
  labs(y="", x="") +#
  theme(axis.line = element_line(colour = "black"),#
        panel.grid.major = element_blank(),#
        panel.grid.minor = element_blank(),#
        panel.border = element_blank(),#
        panel.background = element_blank(),#
        axis.text=element_text(size = 11), #changes size of axes #s#
        axis.text.x=element_text(angle = 90),#
        axis.title=element_text(size= 0), #changes size of axes labels#
        text = element_text(size = 15),#
        legend.position = c(0.15,0.8), #move legend into plot#
        legend.title=element_blank())#
p2<-ggstatsplot::ggcorrmat(#
  axy,#
  cor.vars = c(feed, forage, nestmove, nestnotmove, notmoving, travel),#
  cor.vars.names = c("Feed", "Forage", "Nest Moving", "Nest Not Moving", "Not Moving", "Travel"),#
  output = "plot",#
  matrix.type = "lower",#
  type = "pearson",#
  beta = 0.1,#
  k = 2,#
  sig.level = 0.05,#
  conf.level = 0.95,#
  nboot = 1000,#
  pch= "",#
  colors = c("black", "white", "black"),#
  ggcorrplot.args = list(#
    lab_size = 2) #makes the numbers in the boxes smaller#
)+ #
  scale_y_discrete(position = "right")+#
  theme_bw() +#
  labs(y="", x="") +#
  theme(axis.line = element_line(colour = "black"),#
        panel.grid.major = element_blank(),#
        panel.grid.minor = element_blank(),#
        panel.border = element_blank(),#
        panel.background = element_blank(),#
        axis.text=element_text(size = 11), #changes size of axes #s#
        axis.text.x=element_text(angle = 90),#
        axis.title=element_text(size= 0), #changes size of axes labels#
        text = element_text(size = 15),#
        legend.position = c(0.15,0.8), #move legend into plot#
        legend.title=element_blank())        #
#Combine robust plots#
	 prow <- cowplot::plot_grid( #
	 				   p1 + theme(legend.position="none"),#
	                   p2 + theme(legend.position="none"),#
	                   align = 'vh',#
	                   labels = c("(a)", "(b)"), label_size=10,#
	                   hjust = -0.5,#
	                   vjust=5,#
	                   nrow = 1,#
	                   ncol=2)#
	legend_b <- cowplot::get_legend(p1 + theme(legend.position="bottom")) #extract the legend from one of the plots #
cowplot::plot_grid(prow, NULL, legend_b, ncol = 1,nrow=3, rel_heights = c(1,-0.2,0.5))
#axy data for the complete dataset#
#last edited March 4, 2024 by A. R. Martinig#
#
#run the following prior to running script:#
start-up code.R#
#
#########################################
#complete axy dataset, n=340 inds#
#before merging with personality data#
#########################################
#
axy1<- dplyr::left_join(axy, birth, by=c("squirrel_id")) %>%#
	group_by(axy_id, squirrel_id) %>%#
  	mutate(#
  		axy_age = axy_yr-byear, #calc age#
  		axy_ageclass = ifelse(axy_age==1, "Y", #
  			ifelse(axy_age >1, "A",#
        	ifelse(axy_age < 1, "J", "")))) %>% #creating age class  #
     ungroup() %>%   	      	#
##group by squirrel id and axy id (treats each axy as behavior trial) #
	group_by(squirrel_id, axy_id) %>%#
    mutate(total_obs=sum(total), #
         #get the totals for each behaviour#
         total_feeding=sum(feed),#
         total_foraging=sum(forage),#
         total_nestmoving=sum(nestmove),#
         total_nestnotmoving=sum(nestnotmove),#
         total_notmoving =sum(notmoving),#
         total_travel=sum(travel),#
         #calc the proportions#
         prop_feeding=(total_feeding/total_obs),#
         prop_foraging=(total_foraging/total_obs),#
         prop_nestmoving =(total_nestmoving/total_obs),#
         prop_nestnotmoving =(total_nestnotmoving/total_obs),#
         prop_notmoving =(total_notmoving/total_obs),#
         prop_travel=(total_travel/total_obs)) %>%#
	filter(row_number()==1) %>%  #selects first row!#
  ungroup() %>%#
  droplevels() %>%#
  select(-c(total, total_obs, total_feeding, total_foraging, total_nestmoving, total_nestnotmoving, total_notmoving, total_travel))#
#
summary(axy1) #
head(axy1)#
#
table(axy1$sex)#
#########################################
######  extracting summary stats  #######
#########################################
#
(axy1) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #340 individuals#
nrow(axy1) #38284#
#
#deployment dates needed to calculate the exact number of sessions#
(axy1) %>% as_tibble() %>% count(squirrel_id, axy_yr, axy_month) %>% nrow() #approximately 852 sessions #
#
#year range#
table(axy1$axy_yr)#
#
#sex stats#
stats3<-axy1%>%group_by(squirrel_id)%>%filter(row_number()==1)#
table(stats3$sex)#
#
#ageclass stats#
stats4<-axy1%>%group_by(squirrel_id, axy_ageclass)%>%filter(row_number()==1)#
table(stats4$axy_ageclass)#
table(stats4$axy_ageclass, stats4$sex) #
#
#ageclass stats#
stats5<-axy1%>%group_by(squirrel_id, axy_ageclass)#
table(stats5$axy_ageclass) #
#
#observers#
#obs<-axy1%>%group_by(axy_id)%>%filter(row_number()==1) %>% group_by(f_observer) %>% mutate(sum=n())#
#table(obs$f_observer)#
#summary(obs$sum)#
#
#trial number by age class stats#
ads<-axy1 %>% filter(axy_ageclass =="A") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
yrs<-axy1 %>% filter(axy_ageclass =="Y") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
juvs<-axy1 %>% filter(axy_ageclass =="J") %>% group_by(squirrel_id) %>% mutate(sum=n()) %>% filter(row_number()==1)#
#
#note: trial number is not reliable for adults or yearlings BECAUSE the count starts with the first trial - which may be during earlier phases (like an adult with 5 trials, could have had 3 of them done as a juvenile) - to get around this, I calculated sums after subsetting#
#
nrow(ads)#
table(ads$sum, ads$sex)#
#
nrow(yrs)#
table(yrs$sum, yrs$sex)#
#
nrow(juvs)#
table(juvs$sum, juvs$sex)#
#########################################
# merged axy and personality dataset#
# n=67#
#########################################
#
axy2<- dplyr::inner_join(assays, axy1, by=c("squirrel_id", "sex")) %>%#
  group_by(axy_id)%>%#
  filter(row_number()==1) %>%#
  droplevels()%>%#
  select(-c(videodate, trialtime)) %>%#
  ungroup()#
#
head(axy2)#
#
#########################################
######  extracting summary stats  #######
#########################################
#
(axy2) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #67 individuals#
nrow(axy2) #8678#
#
table(axy2$axy_yr)#
#
stats5<-axy2%>%group_by(squirrel_id)%>%filter(row_number()==1)#
table(stats5$sex)#
#
#assay ageclass#
stats6a<-axy2%>%group_by(squirrel_id, ageclass)%>%filter(row_number()==1)#
table(stats6a$ageclass)#
#
#axy ageclass#
stats6b<-axy2%>%group_by(squirrel_id, axy_ageclass)%>%filter(row_number()==1)#
table(stats6b$axy_ageclass)#
#########################################
# merged axy and personality dataset#
# filtered for matching ageclass, n=52#
#########################################
#
#run filtered by ageclass#
axy_ageclass <- dplyr::inner_join(assays, axy1, by=c("ageclass"="axy_ageclass", "squirrel_id"="squirrel_id", "sex"="sex")) %>%#
  droplevels()%>%#
  group_by(axy_id)%>%#
  filter(row_number()==1) %>%#
  select(-c(videodate, trialtime)) %>%#
  ungroup()#
#
head(axy_ageclass)#
#
#########################################
######  extracting summary stats  #######
#########################################
#
(axy_ageclass) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #52 individuals#
nrow(axy_ageclass) #6722#
#
table(axy_ageclass $axy_yr)#
#
stats7<-axy_ageclass%>%group_by(squirrel_id)%>%filter(row_number()==1)#
table(stats7$sex)#
#
stats8<-axy_ageclass%>%group_by(squirrel_id, ageclass)%>%filter(row_number()==1)#
table(stats8$ageclass) #assay ageclass = axy ageclass#
#########################################
# merged axy and personality dataset#
# filtered for matching AGE, n=17#
#########################################
#
#Run filtered by age #
axy_age <- dplyr::inner_join(assays, axy1, by=c("ageclass"="axy_ageclass", "age"="axy_age", "squirrel_id"="squirrel_id", "sex"="sex")) %>%#
  droplevels()%>%#
  group_by(axy_id)%>%#
  filter(row_number()==1) %>%#
  select(-c(videodate, trialtime)) %>%#
  ungroup()#
head(axy_age)  #
#########################################
######  extracting summary stats  #######
#########################################
#
(axy_age) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #17 individuals#
nrow(axy_age) #1860#
#
table(axy_age $axy_yr)#
#
stats9<-axy_age%>%group_by(squirrel_id)%>%filter(row_number()==1)#
table(stats9$sex)#
#
stats10<-axy_age%>%group_by(squirrel_id, ageclass)%>%filter(row_number()==1)#
table(stats10$ageclass) #assay ageclass = axy ageclass
#PCA generation for OFT and MIS scores#
#using all assays; OFT n = 809; MIS n = 791, and then subsetting for the final dataset (n=67)#
#last edited Feb 13, 2024 by A. R. Martinig#
#
#run the following prior to running script:#
start-up code.R#
axy data subsets.R#
#
#########################################
#Run assay PCA#
#########################################
#
OFT<-assays%>%filter(!is.na(walk))#
#
names(OFT)#
summary(OFT)#
(OFT) %>% as_tibble() %>% count(squirrel_id) %>% nrow() #809 individuals#
nrow(OFT)#
#
### script for running PCA on select columns from data set#
###need to check that you use the right set of behaviours, and that they are formatted as was done previously#
##e.g., proportion of time, counts, yes/no, etc.#
OFT_j<-prcomp(OFT[c("walk", "jump", "hole", "hang", "chew", "groom", "still")], center=TRUE, scale =TRUE)#
summary(OFT_j)#
OFT_j#
#
#using correlation matrix doesn't change anything :)#
#OFT_j<-princomp(OFT[c("walk", "jump", "hole", "hang", "chew", "groom", "still")], cor =TRUE)#
#summary(OFT_j)#
#OFT_j#
#print(loadings(OFT_j), cutoff=0)#
###script for adding PC1 and PC2 column of OFT to data table#
OFT$OFT1<-prcomp(~walk +jump+ hole + hang +chew +groom + still, data=OFT, center=TRUE, scale =TRUE)$x[,1]#
OFT$OFT2<-prcomp(~walk +jump+ hole + hang +chew +groom + still, data=OFT, center=TRUE, scale =TRUE)$x[,2]#
#
OFT_only<-OFT%>%select(squirrel_id, OFT1, OFT2, trialnumber)			#
#
personality_all<-assays%>%#
	group_by(squirrel_id, trialnumber)%>%#
	filter(row_number()==1) %>%#
	left_join(OFT_only, by=c("squirrel_id", "trialnumber")) %>% #
	select(squirrel_id, sex, OFT1, OFT2, observer, ageclass, cohort, year, age, grid, trialnumber, trialdate)#
#
summary(personality_all)#
head(personality_all)#
#
personality_all%>%filter(is.na(age))#
personality_all %>% as_tibble() %>% count(squirrel_id) %>% nrow() #822 individuals#
personality_all %>% as_tibble() %>% count(sex) %>% nrow() #2 sexes#
nrow(personality_all) #1184#
#
#########################################
# merged axy and personality dataset#
# n=67#
#########################################
#
personality_67<-assays%>%#
	left_join(OFT_only, by=c("squirrel_id", "trialnumber")) %>% #
	inner_join(axy1, by=c("squirrel_id"="squirrel_id",  "sex"="sex")) %>%#
	group_by(squirrel_id, trialnumber)%>%#
	filter(row_number()==1) %>%#
	ungroup() %>%#
	select(squirrel_id, OFT1, OFT2, observer, ageclass, cohort, year, age, grid, trialnumber, trialdate)#
summary(personality_67)	#
head(personality_67)	#
personality_67 %>% as_tibble() %>% count(squirrel_id) %>% nrow() #67 individuals#
#########################################
# merged axy and personality dataset#
# filtered for matching ageclass, n=52#
#########################################
#
personality_52<-assays%>%#
	left_join(OFT_only, by=c("squirrel_id", "trialnumber")) %>% #
	inner_join(axy1, by=c("ageclass"="axy_ageclass", "squirrel_id"="squirrel_id", "sex"="sex")) %>%#
	group_by(squirrel_id, trialnumber)%>%#
	filter(row_number()==1) %>%#
	ungroup() %>%#
	select(squirrel_id, OFT1, OFT2, observer, ageclass, sex, cohort, year, age, grid, trialnumber, trialdate)#
summary(personality_52)	#
head(personality_52)	#
personality_52 %>% as_tibble() %>% count(squirrel_id) %>% nrow() #52 individuals
#PCA calculcations for axy behaviours #
#last updated March 5, 2024 by A. R. Martinig#
#
#run the following prior to running script:#
start-up code.R#
axy data subsets.R#
#########################################
#complete axy dataset, n=340 inds#
#before merging with personality data#
#########################################
#
colnames(axy1)#
#
PCaxys1<-prcomp(axy1[c("prop_feeding", "prop_foraging", "prop_nestmoving", "prop_nestnotmoving", "prop_notmoving", "prop_travel")], center=TRUE, scale. =TRUE)#
summary(PCaxys1) #
PCaxys1#
##PC1: feeding, foraging, -nestnotmoving, travel#
##PC2: nestnotmoving, -notmoving#
##PC3: nestmoveing, notmoving#
#
#add PCs to dataset#
axy1$PC1<-prcomp(~prop_feeding + prop_foraging + prop_nestmoving + prop_nestnotmoving +  prop_notmoving + prop_travel, data= axy1, center=TRUE, scale =TRUE)$x[,1]#
axy1$PC2<-(-1)*prcomp(~prop_feeding + prop_foraging + prop_nestmoving + prop_nestnotmoving +  prop_notmoving + prop_travel, data= axy1, center=TRUE, scale =TRUE)$x[,2]#
####testing ageclass issues#
#test_axys<-axys1%>%group_by(squirrel_id)%>%filter(row_number()==1)#
#test_raxys<-r_axys1%>%group_by(squirrel_id)%>%filter(row_number()==1)#
#test_adults327<-adult_axys327%>%group_by(squirrel_id)%>%filter(row_number()==1)#
#
#check ageclass summaries#
#table(test_axys$axy_ageclass) #212 A, 4 J, 111 Y#
#table(test_raxys$axy_ageclass) #195 A, 4 J, 128 Y (loss of 17A/gain 17Y)#
#table(test_adults327$axy_ageclass) #219 A (gained 7)#
#
#where are the extra individuals coming from?#
#axys1%>%filter(squirrel_id==19583) #36 records, 6 when sq is A#
#r_axys1%>%filter(squirrel_id==19583) #36 records, 6 when sq is A#
#adult_axys327%>%filter(squirrel_id==19583) #6 records total#
#
#test_axys%>%filter(squirrel_id==19583) #1 record, sq is Y#
#test_raxys%>%filter(squirrel_id==19583) #1 record, sq is Y, different trialdate than in axys(b/c of ordering by date)#
#test_adults327%>%filter(squirrel_id==19583) #1 record, sq now shows up as adult & different trialdate#
#
#suggested that this squirrel (and the others listed) get ignored when we use the filter(row_number()==1) code bc the adult records are NOT the first row (at least in the r_axys1 file)#
#but overall the actual nrow() counts are consistent between r_axys1 and axys1#
#and actual records of A squirrels are consistent across the three datasets
